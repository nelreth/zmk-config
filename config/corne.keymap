/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        from_osx_to_win: from_osx_to_win {
            compatible = "zmk,behavior-tap-dance";
            label = "FROM_OSX_TO_WIN";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 0>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&sk>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&sk>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
        };

        apost_under: apost_under {
            compatible = "zmk,behavior-mod-morph";
            label = "APOST_UNDER";
            bindings = <&kp APOSTROPHE>, <&kp UNDER>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        comma_question: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            bindings = <&kp COMMA>, <&kp QUESTION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        dot_greater: dot_greater {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_GREATER";
            bindings = <&kp DOT>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        slash_less: slash_less {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_LESS";
            bindings = <&kp SLASH>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        minus_quotes: minus_quotes {
            compatible = "zmk,behavior-mod-morph";
            label = "MINUS_QUOTES";
            bindings = <&kp MINUS>, <&kp DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        go_to_game: go_to_game {
            compatible = "zmk,behavior-tap-dance";
            label = "GO_TO_GAME";
            #binding-cells = <0>;
            bindings = <&none>, <&to 5>;
        };

        go_to_main: go_to_main {
            compatible = "zmk,behavior-tap-dance";
            label = "GO_TO_MAIN";
            #binding-cells = <0>;
            bindings = <&none>, <&to 0>;
        };

        from_win_to_osx: from_win_to_osx {
            compatible = "zmk,behavior-tap-dance";
            label = "FROM_WIN_TO_OSX";
            #binding-cells = <0>;
            bindings = <&none>, <&to 6>;
        };
    };

    macros {
        ctrl_alt_del: ctrl_alt_del {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(DEL))>;
            label = "CTRL_ALT_DEL";
        };

        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp E &kp L &kp R &kp E &kp T &kp H &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        work_id: work_id {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp M &kp N0 &kp N1 &kp N3 &kp N1 &kp N9 &kp N8 &kp MINUS &kp A &kp D &kp M>;
            label = "WORK_ID";
        };

        keepass: keepass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RA(K))>;
            label = "KEEPASS";
        };
    };

    combos {
        compatible = "zmk,combos";

        enter_right {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        save_win {
            bindings = <&kp LC(S)>;
            key-positions = <2 3>;
            layers = <0>;
        };

        copy_win {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
            layers = <0>;
        };

        paste_win {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
            layers = <0>;
        };

        enter_left {
            bindings = <&kp ENTER>;
            key-positions = <14 15>;
        };

        copy_osx {
            bindings = <&kp LG(C)>;
            key-positions = <2 37 3>;
            layers = <6>;
        };

        save_osx {
            bindings = <&kp LG(S)>;
            key-positions = <2 37 3>;
            layers = <6>;
        };

        paste_osx {
            bindings = <&kp LG(V)>;
            key-positions = <27 28 37>;
            layers = <6>;
        };

        undo_win {
            bindings = <&kp LC(Z)>;
            key-positions = <29 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp B  &kp L         &kp D            &kp W            &kp Z        &apost_under  &kp F             &kp O             &kp U          &kp J        &kp BSPC
&kp TAB     &kp N  &HML LCTRL R  &HML LEFT_ALT T  &HML LEFT_WIN S  &kp G        &kp Y         &HMR RIGHT_GUI H  &HMR RIGHT_ALT A  &HMR RCTRL E   &kp I        &comma_question
&kp LSHFT   &kp Q  &kp X         &kp M            &kp C            &kp V        &kp K         &kp P             &dot_greater      &minus_quotes  &slash_less  &from_win_to_osx
                                 &mo 3            &mo 1            &kp SPACE    &kp RET       &mo 2             &kp RIGHT_ALT
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1    &kp N2  &kp N3  &kp N4  &kp N5        &kp N6    &kp N7          &kp N8        &kp N9     &kp N0      &kp BSPC
&trans     &trans    &trans  &trans  &trans  &caps_word    &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp DELETE  &kp TILDE
&kp LSHFT  &keepass  &trans  &trans  &trans  &trans        &trans    &kp PAGE_DOWN   &kp PAGE_UP   &trans     &trans      &go_to_game
                             &trans  &trans  &kp SPACE     &kp RET   &mo 4           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET         &kp AMPS           &kp ASTRK  &kp LPAR   &kp RPAR  &kp BSPC
&kp F1   &kp F2    &kp F3  &kp F4    &kp F5    &kp F6       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMI   &kp EQUAL  &kp BSLH  &kp GRAVE
&kp F7   &kp F8    &kp F9  &kp F10   &kp F11   &kp F12      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp COLON  &kp PLUS   &kp PIPE  &kp TILDE
                           &kp LGUI  &trans    &kp SPACE    &kp RET           &trans             &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&bootloader  &out OUT_USB  &out OUT_BLE  &trans        &trans        &trans          &none         &kp N7        &kp N8        &kp N9        &trans      &kp BACKSPACE
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans      &trans
&trans       &bt BT_PRV    &bt BT_NXT    &trans        &trans        &trans          &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT  &trans
                                         &trans        &trans        &trans          &trans        &kp NUMBER_0  &trans
            >;
        };

        strings {
            bindings = <
&trans  &trans  &work_id  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &ctrl_alt_del
&trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans  &trans  &email  &trans  &trans
&trans  &trans  &trans    &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                          &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        game {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E   &kp R  &kp T        &kp Y      &kp U   &kp I          &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D   &kp F  &kp G        &kp H      &kp J   &kp K          &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C   &kp V  &kp B        &kp N      &kp M   &kp COMMA      &kp DOT  &kp FSLH  &go_to_main
                         &trans  &mo 1  &kp SPACE    &kp ENTER  &trans  &kp RIGHT_ALT
            >;
        };

        OSX {
            bindings = <
&kp ESCAPE  &kp B  &kp L         &kp D            &kp W            &kp Z        &apost_under  &kp F             &kp O             &kp U          &kp J        &kp BSPC
&kp TAB     &kp N  &HML LCTRL R  &HML LEFT_ALT T  &HML LEFT_WIN S  &kp G        &kp Y         &HMR RIGHT_GUI H  &HMR RIGHT_ALT A  &HMR RCTRL E   &kp I        &comma_question
&kp LSHFT   &kp Q  &kp X         &kp M            &kp C            &kp V        &kp K         &kp P             &dot_greater      &minus_quotes  &slash_less  &from_osx_to_win
                                 &mo 3            &mo 1            &kp SPACE    &kp RET       &mo 2             &kp RIGHT_ALT
            >;
        };
    };
};
